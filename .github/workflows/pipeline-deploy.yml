name: pipeline-deploy
on:
  push:
    branches: [main]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Maven test
        run: mvn test
      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: >
            core/target/site/jacoco/jacoco.csv
            srv-monolito/target/site/jacoco/jacoco.csv
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{steps.jacoco.outputs.coverage}}"
          echo "branch coverage = ${{steps.jacoco.outputs.branches}}"
  code-analisys:
    needs: unit-test
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          package: '*jar'
      - name: Cache SonarCloud & Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.sonar/cache
            ~/.m2
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=gabriellmb05_tech-challenge -Dsonar.organization=projetos-gabriel -Dsonar.exclusions=**/src/main/java/br/com/on/fiap/core/domain/**
  publish:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
    - name: Run a one-line script
      uses: actions/checkout@v2
    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
        username: '${{secrets.DOCKERHUB_USER}}'
        password: '${{secrets.DOCKERHUB_TOKEN}}'
    - name: Build and push Docker images
      uses: docker/build-push-action@v6.15.0
      with:
        tags: 'gabriellmb05/tech-challenge:latest'
        context: .
        push: true

